# Ref: http://manpages.ubuntu.com/manpages/eoan/en/man1/tmux.1.html
# -- general -------------------------------------------------------------------
# set prefix form C-b to
set -g prefix C-Space
unbind-key C-b
# ensure sending T to other apps
bind-key C-Space send-prefix
# set -g prefix2 T
set -g prefix2 C-,                        # GNU-Screen compatible prefix
bind-key C-, send-prefix -2
# bind-key a send-keys 'a'
# 1. Options
# --------server options-------------------------
# buffer-limit number
# command-alias[] name=value
set -g default-terminal "screen-256color"
set -g escape-time 100
# the server will exit when there are no active sessions.
set -g exit-empty on
# the server will exit when there are no attached clients.
set -g exit-unattached off
set -g focus-events on
# history-file path
# message-limit number
# set-clipboard [on | external | off]
# terminal-overrides[] string

#--------session options-------------------------
set -g assume-paste-time 1
set -g history-limit 5000                 # buffer history

# default-command shell-command
# default-shell path
# key-table key-table
# update-environment[] variable
# user-keys[] key

# lock-after-time number
# lock-command shell-command

# If enabled and the session is no longer attached to any clients, it is destroyed
set -g destroy-unattached off
# the client is detached when the session it is attached to is destroyed
set -g detach-on-destroy on

set -g base-index 1
set -g renumber-windows on
# default-size XxY

# disable mouse support
set -g mouse off
# repeat-time time[500]

set -g set-titles on
# todo:
# set-titles-string string

# activity-action [any | none | current | other]
set -g activity-action any
set -g bell-action none
set -g silence-action none

# visual for activity, bell and silence
set -g visual-activity off
set -g visual-bell off
set -g visual-silence off
# display-panes command to show the indicator
set -g display-panes-colour green
set -g display-panes-active-colour red
# the amount of time for which status line messages and other on-screen indicators are displayed.
set -g display-panes-time 2000
# the amount of time for which status line messages and other on-screen indicators are displayed
set -g display-time 3000

# message-command-style style
# message-style style

set -q -g status-utf8 on                  # expect UTF-8 (tmux < 2.2)
# status [off | on | 2 | 3 | 4 | 5]
# status-format[] format
set -g status-interval 10     # redraw status line every 10 seconds
set -g status-keys vi
# status-justify [left | centre | right]
# status-left string
# status-left-length length
# status-left-style style
# status-position [top | bottom]
# status-right string
# status-right-length length
# status-right-style style
# status-style style

# word-separators string

# --------window and pane options-------------------------

setw -q -g utf8 on  # tmux <2.2
# alternate-screen [on | off]

set -g xterm-keys on
# Use vi or emacs-style key bindings in copy mode.
setw -g mode-keys vi
# mode-style style

setw -g automatic-rename on   # rename window to reflect current program
# automatic-rename-format format

# wrap-search [on | off]
setw -g monitor-activity off
setw -g monitor-bell off
setw -g monitor-silence 0

# Command: clock-mode, display a large clock
setw -g clock-mode-colour red
setw -g clock-mode-style 24

setw -g pane-base-index 1
# main-pane-height height
# main-pane-width width

# other-pane-height height
# other-pane-width width
# pane-active-border-style style

# pane-border-format format
# pane-border-status [off | top | bottom]
# pane-border-style style
# remain-on-exit [on | off]
# synchronize-panes [on | off]

# allow-rename [on | off]
# window-size largest | smallest | manual
# window-style style
# aggressive-resize [on | off]

# window-active-style style
# window-status-activity-style style
# window-status-bell-style style
# window-status-current-format string
# window-status-current-style style
# window-status-format string
# window-status-last-style style
# window-status-separator string
# window-status-style style


# 2. Key bindings
# how to use bind-key:
# bind-key [-nr] [-T key-table] key command [arguments]
# Keys are bound in a 'key table'. By default (without -T), the key is bound in the 'prefix' key Table, which is named 'prefix'.
# -T: The 'root' table is used for keys pressed without the prefix-key(default: C-b)
# -n: -n is an alias for -T root
# -r flag indicates this key may repeat, see the repeat-time option.
# Attention to the built-in table:  'root' and 'prefix'
# relaod config file
# unbind C-r
bind-key R source-file ~/.tmux.conf \; display "Config file reloaded!"
# edit configuration
bind-key E new-window -n "~/.tmux.conf.local" "sh -c '\${EDITOR:-vim} ~/.tmux.conf.local && tmux source ~/.tmux.conf && tmux display \"~/.tmux.conf sourced\"'"

# -----session and client commands --------------------------------------------
unbind-key s
bind-key s switch-client -Ttb_session

# use command: <prefix><s>{c|r|s|f|k|d...}
bind-key -Ttb_session c new-session
# bind-key -Ttb_session a command-prompt -I "attach to #{client_last_session}" "attach-session -t %1"
bind-key -Ttb_session s choose-tree -s # <prefix>s
bind-key -Ttb_session x kill-session
# rename session:
bind-key -Ttb_session r command-prompt -I "#{session_name}" "rename-session %%"  # <prefix>$
bind-key -Ttb_session l list-sessions # list-session [-F format]

# manage current client
bind-key -Ttb_session d detach-client  # <prefix>d or <prefix>D
# switch client to other session
bind-key -Ttb_session f command-prompt -p "find and swtich to session" 'switch-client -t %%'
# navigate in vi mode(h/j/k/l)
bind-key -Ttb_session n switch-client -n # <prefix>)    switch current client to next session
bind-key -Ttb_session p switch-client -p # <prefix>(    switch current client to previous session
bind-key -Ttb_session a switch-client -l # <prefix>L    switch current client to alternate session

# r           Force redraw of the attached client.
# -----window commands --------------------------------------------
unbind-key w
bind-key w switch-client -Ttb_window

bind-key -Ttb_window c new-window  # <prefix>c
bind-key -Ttb_window r command-prompt -I "#{window_name}" "rename-window %%"  # <prefix>,
# <prefix>i           Display some information about the current window.
bind-key -Ttb_window k kill-window  # <prefix>&, Kill the current window.
bind-key -Ttb_window x confirm-before -p "kill-window #W? (y/n)" kill-window # <prefix>&

# window navigation
# <prefix>n           Change to the next window.
# <prefix>p           Change to the previous window.
# <prefix>0 to 9      Select windows 0 to 9.
bind-key -r a last-window     # select alternate window
# <prefix>'           Prompt for a window index to select.
bind-key -Ttb_window w choose-tree -w # <prefix>w,  choose the current window interactively.
bind-key -Ttb_window l list-windows

# <prefix>.           Prompt for an index to move the current window.

# -----pane commands --------------------------------------------
# Create a new pane by splitting target-pane:
bind-key | split-window -h # <prefix>%
bind-key - split-window -v # <prefix>"

# pane selection
unbind-key Left
unbind-key Right
unbind-key Up
unbind-key Down

bind-key -r h select-pane -L  # switch to left pane
bind-key -r j select-pane -D  # switch to down pane
bind-key -r k select-pane -U  # switch to up pane
bind-key -r l select-pane -R  # switch to right pane
# quick pane selection
# <prefix>q 1,2,3...          # show and select pane
bind-key -r C-p select-pane -t :.-
bind-key -r C-n select-pane -t :.+
bind-key -r C-a last-pane    # <prefxi>;  switch to last(alternate) pane

# layout selection
# <prefix>Space       Arrange the current window in the next preset layout.
bind-key C-l switch-client -Ttb_layout
bind-key -Ttb_layout Space next-layout                # Space
bind-key -Ttb_layout 1 select-layout even-horizontal  # M-1
bind-key -Ttb_layout 2 select-layout even-vertical    # M-2
bind-key -Ttb_layout 3 select-layout main-horizontal  # M-3
bind-key -Ttb_layout 4 select-layout even-horizontal  # M-4
# swap panes
bind-key > swap-pane -D       # <prefix>}, swap current pane with the next one
bind-key < swap-pane -U       # <prefix>{, swap current pane with the previous one
# rotate panes
bind-key -r C-o rotate-window #<prefix>C-o  Rotate the panes in the current window forwards
bind-key -r C-O rotate-window -D #<prefix>M-o  Rotate the panes in the current window backwards.

# resize pane
unbind-key C-Left
unbind-key C-Right
unbind-key C-Up
unbind-key C-Down
# <prefix>z                   #  the active pane is toggled between zoomed (occupying the whole of the window) and unzoomed (its normal position in the layout)
bind-key -r H resize-pane -L 2
bind-key -r J resize-pane -D 2
bind-key -r K resize-pane -U 2
bind-key -r L resize-pane -R 2

bind-key Y capture-pane     # Capture the contents of a pane > buffer
bind-key Escape copy-mode        # <prefix>[  Enter copy mode, act as command mode of vi
# under the copy-mode
bind-key  -T copy-mode-vi v send-keys -X begin-selection   # Sapce
bind-key  -T copy-mode-vi y send-keys -X copy-selection    # Enter

# -----buffer commands --------------------------------------------
bind-key b switch-client -Ttb_buffer
bind-key -Ttb_buffer b choose-buffer -Z    # <prefix>=
bind-key -Ttb_buffer l list-buffers        # <prefix>>#
bind-key -Ttb_buffer d delete-buffer
bind-key -Ttb_buffer e command-prompt "load-buffer %%"
bind-key -Ttb_buffer s command-prompt "save-buffer %%"
bind-key -Ttb_buffer p paste-buffer   # <prefix>]
bind-key -Ttb_buffer c clear-history

# <prefix>!           Break the current pane out of the window.  Convert pane into a window
# <prefix>x           Kill the current pane.
unbind-key C-z        # disable suspend tumx client

# <prefix>m           Mark the current pane (see select-pane -m).
# <prefix>M           Clear the marked pane.

# -----other commands --------------------------------------------
# other usefull keybinds
# <prefix>:           Enter the tmux command prompt.
# <prefix>?           List all key bindings.
bind-key C-m show-messages    # <prefix>~
# <prefix>t           Show the time.

# using system clip
# if-shell "uname | grep -q Darwin" \
#          "display-message 'it is mac'\; bind C-c run 'save-buffer - | pbcopy'\;  bind C-v run 'set-buffer $(pbpaste)\; paste-buffer' "   \
#          "display-message 'it is linux'\; bind C-c run 'save-buffer - | xclip -i -sel clipboard'\; bind C-v run 'set-buffer $(xclip -o -sel clipboard); paste-buffer' "

if-shell -b "uname | grep -q Darwin" \
  " \
    display-message 'it is mac' \
    bind C-c run 'tmux save-buffer - | pbcopy' \
    bind C-v run 'tmux set-buffer $(pbpaste); tmux paste-buffer' \
  " \
  " \
    display-message 'it is linux' \
    bind C-c run 'tmux save-buffer - | xclip -i -sel clipboard' \
    bind C-v run 'tmux set-buffer $(xclip -o -sel clipboard); tmux paste-buffer' \
  "


# lower version maybe needreattach-to-user-namespace
# set -g default-command "reattach-to-user-namespace -l $SHELL"
# bind C-c run "tmux save-buffer - | reattach-to-user-namespace pbcopy"
# bind C-v run "tmux set-buffer $(reattach-to-user-namespace pbpaste); tmux paste-buffer"

# keybinds defined by plugins
# prefix + Ctrl-s - save
# prefix + Ctrl-r - restore

# 3. Hooks


# 4. local options
if '[ -f ~/.tmux.conf.local ]' 'source ~/.tmux.conf.local'

# 5. Plugins
# ---------------------------------------------------------------
set -g @plugin 'tmux-plugins/tpm'
# basic tmux setting
# set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-resurrect'
# set -g @plugin 'jimeh/tmux-themepack'
# set -g @themepack 'powerline/default/green'
# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'git@github.com/user/plugin'
# set -g @plugin 'git@bitbucket.com/user/plugin'

POWERLINE_TMUX=${PY_PACKS_LOC}/powerline/bindings/tmux/powerline.conf
run-shell "powerline-daemon -q"
source ${POWERLINE_TMUX}

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
if "test ! -d ~/.tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm && ~/.tmux/plugins/tpm/bin/install_plugins'"

run -b '~/.tmux/plugins/tpm/tpm'
