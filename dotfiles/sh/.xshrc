# when interactive shell start, load interactive shell configuration.  common configs for .bashrc and .zshrc
# user's personal preferences for the command line for interactive shell: custom prompt, specific color scheme...
# The most common customization inside the .bashrc file is to add aliases.

# usefull shell tools
alias l="ls -la"
alias ll="ls -l"
alias gz="tar -xzvf"
alias tgz="tar -xzvf"
alias bz2="tar -xjvf"
# alias zip="unzip"
alias cl="clear"
alias h="history"
alias k="kill -9"
alias cat='bat'

# alias python="python3"
alias vi=nvim
# don't run nvim inside nvim
if [ -n "$NVIM_LISTEN_ADDRESS" ]; then
    # if [ -x "$(command -v nvr)" ]; then
    #     # echo "using nvr instead nvim"
    #     alias nvim=nvr
    # else
    alias nvim='echo "No nesting nvim!\nUsing:\nnvr [-loOp] <file> [<file>...]"'
    # fi
fi

alias f="fzf"
alias ff="fzf --preview 'bat --color always {}'"
# find file with preview, then open with vim/nvim
# alias fv="nvim \$(fzf --preview 'bat --color always {}')"
alias fv="nvim \$(fzf -m --preview 'bat --color always {}')"
# alias gd="git status -s | fzf --no-sort --reverse --preview 'git diff --color=always {+2} | diff-so-fancy' --bind=ctrl-J:preview-down --bind=alt-j:preview-down  --bind=ctrl-K:preview-up --bind=alt-k:preview-up --preview-window=right:60%:wrap"
alias gd="git status -s | fzf --no-sort --reverse --preview 'git diff --color=always {+2} | diff-so-fancy' --bind=alt-j:preview-down  --bind=alt-k:preview-up --preview-window=right:60%:wrap"

# tmux session management
alias t="tmux"
# alias tn="tmux new"
# alias tns="tmux new -s"
alias tn="tmux new -s"
alias ta="tmux attach -t"
alias tl="tmux ls"
alias tk="tmux kill-session -t"

[ -z "$TMUX" ] && export TERM=xterm-256color

alias idea="${HOME}/idea"
# add gi command to generate .gitignore file. ref: https://www.gitignore.io/
# function gi() { curl -sL https://www.gitignore.io/api/\$@ ;}

# java like
alias spring-start='curl https://start.spring.io/starter.zip -d type=gradle-project -d javaVersion=11 -d dependencies=web,devtools -o starter.zip'

#THIS MUST BE AT THE END OF THE FILE FOR SDKMAN TO WORK!!!
export SDKMAN_DIR="${HOME}/.sdkman"
[[ -s "${HOME}/.sdkman/bin/sdkman-init.sh" ]] && source "${HOME}/.sdkman/bin/sdkman-init.sh"
